@model MVCErick.Models.UsuarioModels

@{
    ViewBag.Title = "Create";
}

<h2>Criar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <head>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>

    </head>
    <div class="form-horizontal">

        <div class="row">
            <div class="col-md-6">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", style = "width:100%" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })



                </div>
            </div>

            <div class="col-md-6">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control", style = "width:100%" } })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", style = "width:100%", id = "CPF", placeholder = "999.999.999-99" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                <script>
                    $(document).ready(function () {
                        $("#CPF").on('input', function () {
                            var cpf = $(this).val();
                            cpf = cpf.replace(/\D/g, ''); // Remove todos os caracteres que não são dígitos
                            if (cpf.length > 3) {
                                cpf = cpf.substring(0, 3) + '.' + cpf.substring(3); // Adiciona ponto após os primeiros 3 dígitos
                            }
                            if (cpf.length > 7) {
                                cpf = cpf.substring(0, 7) + '.' + cpf.substring(7); // Adiciona ponto após os próximos 3 dígitos
                            }
                            if (cpf.length > 11) {
                                cpf = cpf.substring(0, 11) + '-' + cpf.substring(11); // Adiciona hífen após os próximos 3 dígitos
                                cpf = cpf.substring(0, 14); // Botando limites no numero de digitos do CPF
                            }
                            $(this).val(cpf);
                        });
                    });
                </script>
            </div>
                    <div class="col-md-4">
                    @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", style = "width:100%", id = "Telefone", placeholder = "(XX)XXXX-XXXX" } })
                        @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                        <script>
                            $(document).ready(function () {
                                $('#Telefone').on('input', function () {
                                    var telefone = $(this).val().replace(/\D/g, ''); // Remove todos os caracteres que não são dígitos
                                    if (telefone.length > 2) {
                                        telefone = '(' + telefone.substring(0, 2) + ')' + telefone.substring(2); // Adiciona parênteses após os primeiros 2 dígitos
                                    }
                                    if (telefone.length > 8) {
                                        telefone = telefone.substring(0, 8) + '-' + telefone.substring(8); // Adiciona hífen após os próximos 4 dígitos
                                    }
                                    if (telefone.length > 13) {
                                        telefone = telefone.substring(0, 14); // Limita o tamanho do telefone
                                    }
                                    $(this).val(telefone);
                                });
                            });
                        </script>
                    </div>

                    <div class="col-md-4">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", style = "width:100%" } })
                            @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })

                        </div>
                    </div>

            <div class="col-md-4">
                    @Html.LabelFor(model => model.EmpresaId, "EmpresaId", htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownList("EmpresaId", null, htmlAttributes: new { @class = "form-control", style = "width:100%" })
                        @Html.ValidationMessageFor(model => model.EmpresaId, " É obrigatorio que o usuário selecione a empresa a qual está atrelado! ", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" style="border-color:darkgray"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>
